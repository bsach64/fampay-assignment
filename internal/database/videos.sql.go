// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: videos.sql

package database

import (
	"context"
	"database/sql"
	"encoding/json"
	"time"
)

const addVideo = `-- name: AddVideo :one
INSERT INTO videos (
	video_id, title, description, published_at, channel_id, channel_title, thumbnails
) VALUES (
	$1,
	$2,
	$3,
	$4,
	$5,
	$6,
	$7
)
ON CONFLICT (video_id) DO NOTHING
RETURNING id, video_id, title, description, published_at, channel_id, channel_title, thumbnails, fetched_at
`

type AddVideoParams struct {
	VideoID      string
	Title        string
	Description  sql.NullString
	PublishedAt  time.Time
	ChannelID    string
	ChannelTitle string
	Thumbnails   json.RawMessage
}

func (q *Queries) AddVideo(ctx context.Context, arg AddVideoParams) (Video, error) {
	row := q.db.QueryRowContext(ctx, addVideo,
		arg.VideoID,
		arg.Title,
		arg.Description,
		arg.PublishedAt,
		arg.ChannelID,
		arg.ChannelTitle,
		arg.Thumbnails,
	)
	var i Video
	err := row.Scan(
		&i.ID,
		&i.VideoID,
		&i.Title,
		&i.Description,
		&i.PublishedAt,
		&i.ChannelID,
		&i.ChannelTitle,
		&i.Thumbnails,
		&i.FetchedAt,
	)
	return i, err
}
